apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-output
  namespace: exercises
  labels:
    app: log-output
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-output
  template:
    metadata:
      labels:
        app: log-output
    spec:
      containers:
        - name: writer
          # Build locally with: docker build -t log-output-writer:2.1 ./log_output/writer
          image: log-output-writer:2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_INTERVAL_MS
              value: "5000"
            - name: LOG_FILE_PATH
              value: "/data/log.txt"
          volumeMounts:
            - name: shared-data
              mountPath: /data
        - name: reader
          # Build locally with: docker build -t log-output-reader:2.1 ./log_output/reader
          image: log-output-reader:2.1
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "8080"
            - name: LOG_FILE_PATH
              value: "/data/log.txt"
            - name: PING_PONG_HOST
              value: "ping-pong"
            - name: PING_PONG_PORT
              value: "8080"
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: log-output-config
                  key: MESSAGE
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: shared-data
              mountPath: /data
            - name: log-output-config-volume
              mountPath: /config
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: log-output-config-volume
          configMap:
            name: log-output-config
            items:
              - key: information.txt
                path: information.txt

